---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/anyio/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: anyio
    pipelines.appstudio.openshift.io/type: build
  name: anyio-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/anyio:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/anyio
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/anyio/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/anyio",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/arrow/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: arrow
    pipelines.appstudio.openshift.io/type: build
  name: arrow-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/arrow:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/arrow
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/arrow/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/arrow",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/attrs/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: attrs
    pipelines.appstudio.openshift.io/type: build
  name: attrs-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/attrs:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/attrs
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/attrs/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/attrs",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/beautifulsoup4/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: beautifulsoup4
    pipelines.appstudio.openshift.io/type: build
  name: beautifulsoup4-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/beautifulsoup4:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/beautifulsoup4
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/beautifulsoup4/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/beautifulsoup4",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/black/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: black
    pipelines.appstudio.openshift.io/type: build
  name: black-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/black:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/black
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/black/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/black",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/blinker/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: blinker
    pipelines.appstudio.openshift.io/type: build
  name: blinker-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/blinker:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/blinker
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/blinker/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/blinker",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/charset-normalizer/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: charset-normalizer
    pipelines.appstudio.openshift.io/type: build
  name: charset-normalizer-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/charset-normalizer:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/charset-normalizer
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/charset-normalizer/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/charset-normalizer",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/click/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: click
    pipelines.appstudio.openshift.io/type: build
  name: click-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/click:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/click
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/click/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/click",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/colorama/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: colorama
    pipelines.appstudio.openshift.io/type: build
  name: colorama-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/colorama:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/colorama
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/colorama/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/colorama",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/django/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: django
    pipelines.appstudio.openshift.io/type: build
  name: django-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/django:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/django
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/django/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/django",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/docutils/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: docutils
    pipelines.appstudio.openshift.io/type: build
  name: docutils-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/docutils:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/docutils
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/docutils/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/docutils",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/freezegun/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: freezegun
    pipelines.appstudio.openshift.io/type: build
  name: freezegun-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/freezegun:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/freezegun
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/freezegun/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/freezegun",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/hatch-fancy-pypi-readme/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hatch-fancy-pypi-readme
    pipelines.appstudio.openshift.io/type: build
  name: hatch-fancy-pypi-readme-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hatch-fancy-pypi-readme:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/hatch-fancy-pypi-readme
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hatch-fancy-pypi-readme/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hatch-fancy-pypi-readme",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/hatchling/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: hatchling
    pipelines.appstudio.openshift.io/type: build
  name: hatchling-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/hatchling:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/hatchling
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/hatchling/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/hatchling",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/httpx/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: httpx
    pipelines.appstudio.openshift.io/type: build
  name: httpx-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/httpx:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/httpx
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/httpx/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/httpx",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/humanize/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: humanize
    pipelines.appstudio.openshift.io/type: build
  name: humanize-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/humanize:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/humanize
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/humanize/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/humanize",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/idna/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: idna
    pipelines.appstudio.openshift.io/type: build
  name: idna-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/idna:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/idna
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/idna/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/idna",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/iniconfig/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: iniconfig
    pipelines.appstudio.openshift.io/type: build
  name: iniconfig-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/iniconfig:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/iniconfig
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/iniconfig/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/iniconfig",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/isort/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: isort
    pipelines.appstudio.openshift.io/type: build
  name: isort-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/isort:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/isort
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/isort/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/isort",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/jinja2/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: jinja2
    pipelines.appstudio.openshift.io/type: build
  name: jinja2-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/jinja2:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/jinja2
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/jinja2/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/jinja2",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/loguru/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: loguru
    pipelines.appstudio.openshift.io/type: build
  name: loguru-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/loguru:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/loguru
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/loguru/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/loguru",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/markdown/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: markdown
    pipelines.appstudio.openshift.io/type: build
  name: markdown-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/markdown:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/markdown
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/markdown/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/markdown",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/marshmallow/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: marshmallow
    pipelines.appstudio.openshift.io/type: build
  name: marshmallow-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/marshmallow:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/marshmallow
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/marshmallow/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/marshmallow",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/more-itertools/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: more-itertools
    pipelines.appstudio.openshift.io/type: build
  name: more-itertools-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/more-itertools:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/more-itertools
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/more-itertools/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/more-itertools",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/ninja/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: ninja
    pipelines.appstudio.openshift.io/type: build
  name: ninja-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/ninja:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/ninja
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/ninja/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/ninja",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/numpy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: numpy
    pipelines.appstudio.openshift.io/type: build
  name: numpy-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/numpy:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/numpy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/numpy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/numpy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/packaging/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: packaging
    pipelines.appstudio.openshift.io/type: build
  name: packaging-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/packaging:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/packaging
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/packaging/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/packaging",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/patchelf/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: patchelf
    pipelines.appstudio.openshift.io/type: build
  name: patchelf-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/patchelf:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/patchelf
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/patchelf/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/patchelf",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/pathspec/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pathspec
    pipelines.appstudio.openshift.io/type: build
  name: pathspec-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pathspec:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/pathspec
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pathspec/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pathspec",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/pluggy/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pluggy
    pipelines.appstudio.openshift.io/type: build
  name: pluggy-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pluggy:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/pluggy
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pluggy/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pluggy",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/prompt-toolkit/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: prompt-toolkit
    pipelines.appstudio.openshift.io/type: build
  name: prompt-toolkit-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/prompt-toolkit:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/prompt-toolkit
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/prompt-toolkit/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/prompt-toolkit",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/pygments/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pygments
    pipelines.appstudio.openshift.io/type: build
  name: pygments-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pygments:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/pygments
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pygments/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pygments",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/pytest/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: pytest
    pipelines.appstudio.openshift.io/type: build
  name: pytest-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/pytest:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/pytest
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/pytest/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/pytest",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/python-dateutil/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: python-dateutil
    pipelines.appstudio.openshift.io/type: build
  name: python-dateutil-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/python-dateutil:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/python-dateutil
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/python-dateutil/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/python-dateutil",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/requests/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: requests
    pipelines.appstudio.openshift.io/type: build
  name: requests-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/requests:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/requests
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/requests/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/requests",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/rich/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: rich
    pipelines.appstudio.openshift.io/type: build
  name: rich-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/rich:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/rich
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/rich/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/rich",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/tomlkit/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tomlkit
    pipelines.appstudio.openshift.io/type: build
  name: tomlkit-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tomlkit:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/tomlkit
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tomlkit/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tomlkit",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/tox/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tox
    pipelines.appstudio.openshift.io/type: build
  name: tox-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tox:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/tox
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tox/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tox",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/tqdm/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: tqdm
    pipelines.appstudio.openshift.io/type: build
  name: tqdm-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/tqdm:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/tqdm
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/tqdm/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/tqdm",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/trove-classifiers/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: trove-classifiers
    pipelines.appstudio.openshift.io/type: build
  name: trove-classifiers-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/trove-classifiers:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/trove-classifiers
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/trove-classifiers/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/trove-classifiers",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/typing-extensions/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: typing-extensions
    pipelines.appstudio.openshift.io/type: build
  name: typing-extensions-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/typing-extensions:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/typing-extensions
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/typing-extensions/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/typing-extensions",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/urllib3/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: urllib3
    pipelines.appstudio.openshift.io/type: build
  name: urllib3-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/urllib3:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/urllib3
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/urllib3/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/urllib3",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/lcarva/calunga?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "true"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-path-change: "[Containerfile, packages/wheel/**]"
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: calunga
    appstudio.openshift.io/component: wheel
    pipelines.appstudio.openshift.io/type: build
  name: wheel-on-pull-request
  namespace: calunga-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/calunga-tenant/wheel:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: path-context
    value: packages/wheel
  - name: dockerfile
    value: Containerfile
  - name: build-args-file
    value: packages/wheel/argfile.conf
  - name: hermetic
    value: "true"
  - name: prefetch-input
    value: |
      {
        "type": "pip",
        "path": "./packages/wheel",
        "allow_binary": "false"
      }
  pipelineRef:
    name: build
  taskRunTemplate: {}
  workspaces:
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
